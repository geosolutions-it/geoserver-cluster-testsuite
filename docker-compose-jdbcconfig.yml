x-common-geoserver:
  &default-common-geoserver
  image: kartoza/geoserver:2.25.2
  restart: unless-stopped
  env_file:
    - .env
  healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u admin:'geoserver' http://localhost:8080/geoserver/rest/about/version.xml"
      interval: 1m30s
      timeout: 10s
      retries: 10
  volumes:
    - settings:/settings
    - geoserver-cluster-data:/opt/geoserver/data_dir
    - geoserver-cluster-gwc-data:/opt/geoserver/gwc
    # - ./geoserver/logging.xml:/opt/geoserver/data_dir/logging.xml:ro
    - ./geoserver/jdbcconfig.properties:/opt/geoserver/data_dir/jdbcconfig/jdbcconfig.properties:ro
    - ./geoserver/jdbcstore.properties:/opt/geoserver/data_dir/jdbcstore/jdbcstore.properties:ro
    - ./geoserver/hz_cluster.properties:/opt/geoserver/data_dir/cluster/cluster.properties:ro
    - ./geoserver/controlflow.properties:/opt/geoserver/data_dir/controlflow.properties:rw
    - ./geoserver/hazelcast.xml:/opt/geoserver/data_dir/cluster/hazelcast.xml:ro
    - ./geoserver/context-jndi.xml:/usr/local/tomcat/conf/context.xml:rw
    # - ./geoserver/patch-hazelcast.sh:/usr/local/bin/patch-hazelcast.sh
  # entrypoint: ["/bin/bash", "-c"]
  # command:
  #   - |
  #     apt-get update && apt-get install -y xmlstarlet
  #     chmod +x /usr/local/bin/patch-hazelcast.sh
  #     /usr/local/bin/patch-hazelcast.sh
  #     /scripts/entrypoint.sh

services:

  db:
    image: kartoza/postgis:16-3.4
    volumes:
      - geo-db-data:/var/lib/postgresql
      - ./db/postgresql.conf:/etc/postgresql/16/main/postgresql.conf.template:rw
    ports:
      - "5444:5432"
    environment:
      - POSTGRES_JNDI=TRUE
      - POSTGRES_DB=gis,data,sample,geoserver_config,geoserver_data
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - POSTGRES_MAX_CONNECTIONS=500
      - POSTGRES_SHARED_BUFFERS=4GB
      - ALLOW_IP_RANGE=0.0.0.0/0
      - FORCE_SSL=TRUE
    restart: unless-stopped
    healthcheck:
      test: "PGPASSWORD=docker pg_isready -h 127.0.0.1 -U docker -d gis"

  master:
    << : *default-common-geoserver
    environment:
      - READONLY=disabled
      - TOGGLE_MASTER=true
      - TOGGLE_SLAVE=false
      - COMMUNITY_EXTENSIONS=jdbcconfig-plugin,jdbcstore-plugin,hz-cluster-plugin #,datadir-catalog-loader-plugin
    depends_on:
        db:
          condition: service_healthy

  node1:
    << : *default-common-geoserver
    environment:
      - READONLY=enabled
      - TOGGLE_MASTER=false
      - TOGGLE_SLAVE=true
      - COMMUNITY_EXTENSIONS=jdbcconfig-plugin,jdbcstore-plugin,hz-cluster-plugin #,datadir-catalog-loader-plugin
    depends_on:
        db:
          condition: service_healthy
        master:
          condition: service_healthy

  node2:
    << : *default-common-geoserver
    environment:
      - READONLY=enabled
      - TOGGLE_MASTER=false
      - TOGGLE_SLAVE=true
      - COMMUNITY_EXTENSIONS=jdbcconfig-plugin,jdbcstore-plugin,hz-cluster-plugin #,datadir-catalog-loader-plugin
    depends_on:
        db:
          condition: service_healthy
        master:
          condition: service_healthy

  node3:
    << : *default-common-geoserver
    environment:
      - READONLY=enabled
      - TOGGLE_MASTER=false
      - TOGGLE_SLAVE=true
      - COMMUNITY_EXTENSIONS=jdbcconfig-plugin,jdbcstore-plugin,hz-cluster-plugin #,datadir-catalog-loader-plugin
    depends_on:
        db:
          condition: service_healthy
        master:
          condition: service_healthy

  haproxy:
    image: haproxy:latest
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      master:
        condition: service_healthy
    environment:
      - RSYSLOG_UDP_SERVER=invalid

volumes:
  settings:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./geoserver/settings
  geo-db-data:
  geoserver-cluster-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./geoserver/ne-styles
  geoserver-cluster-gwc-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./geoserver/gwc